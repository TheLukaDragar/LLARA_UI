version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    command: npm start
    stdin_open: true
    tty: true
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - classla_data:/root/classla_resources
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - STANZA_RESOURCES_DIR=/root/classla_resources
      - WATCHFILES_FORCE_POLLING=true
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network

  text_processor:
    build: 
      context: ./backend/text_processor
      dockerfile: Dockerfile
    platform: linux/arm64
    volumes:
      - ./backend/text_processor:/app
      - classla_data:/root/classla_resources
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - STANZA_RESOURCES_DIR=/root/classla_resources
      - PYTHONUNBUFFERED=1
      - OMP_NUM_THREADS=8
      - MKL_NUM_THREADS=8
      - OPENBLAS_NUM_THREADS=8
      - VECLIB_MAXIMUM_THREADS=8
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: '0'
    command: celery -A tasks worker --loglevel=debug --concurrency=1 --pool=prefork
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network

  redis:
    image: redis:alpine
    platform: linux/arm64
    ports:
      - "6379:6379"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  frontend_node_modules:
  classla_data:
    driver: local